{"version":3,"sources":["redux/reducer/index.js","redux/store.js","redux/action/actionType.js","redux/action/actionCreator.js","api/weatherAPI.js","config/dataConfig.js","components/LocationInput.js","components/chart/BarChart.js","tool/date.js","components/chart/BaicChart.js","tool/draw.js","components/chart/PieChart.js","components/WeatherContent.js","App.js","serviceWorker.js","index.js"],"names":["initalState","maxTempList","minTempList","humidityList","locationList","woeid","city","createStore","state","action","type","tmpList","formatWeatherList","payload","list","loading","getLoactionList","map","item","title","maxList","minList","forEach","max_temp","min_temp","humidity","dateArray","applicable_date","split","recordDate","tmp","push","getLocation","getWeatcherList","fetchLoactionList","key","a","callAPI","respone","status","json","d","undefined","fetchLoactionWeatherByDate","dateString","value","url","header","Headers","append","fetch","headers","BasicBar","drawBarChartFn","connect","dispatch","localKey","test","localValue","useState","inputValue","setInputValue","history","useHistory","searchID","setSearchID","inputRef","useRef","optionList","data-id","length","filterList","filter","toUpperCase","useEffect","className","ref","onInput","e","currentTarget","searchTarget","console","log","clearTimeout","id","setTimeout","onClick","current","formatDateString","date","getFullYear","getMonth","getDate","BaicChart","props","canvasRef","React","createRef","cardRef","canvas_W","canvas_H","this","width","height","children","clientWidth","mobile","setState","ctx","getContext","clearRect","drawChat","data","Component","drawGrid","maxValue","canvasWidth","canvasHeight","scale","color","padding","gridValue","ratio","fix1px","lineWidth","gridY","Math","round","drawLine","drawText","drawBarList","bar_w","barCount","paddingSize","setPaddingSize","barSize","startX","step","getChartStep","barIndex","barObj","barKey","Object","keys","barHeight","values","x","y","barColor","setLinearGradientColor","drawBar","textX","fontSize","setFontSize","msg","fontStyle","align","textAlign","save","fillStyle","font","fillText","restore","startY","endX","endY","gradient","createLinearGradient","addColorStop","strokeStyle","beginPath","moveTo","lineTo","stroke","upperLeftCornerX","upperLeftCornerY","fillRect","drawPieSlice","centerX","centerY","radius","startAngle","endAngle","arc","closePath","fill","setPieChartWidth","originWidth","BarChartHOC","colorList","v","drawBarChart","drawPieList","drawPieChart","pieColor","titleList","count","singleWidth","min","twoPI","PI","halfPieHieght","rowCount","parseInt","pieObj","i","value_ratio","angleList","slicePieCenterX","columnIndex","pieCenterY","start_angle","j","slice_angle","cosX","cos","sinY","sin","pieCOlor","labelX","labelY","startDate","loadingFn","setDate","tmpDateString","location","match","params","hiddenClass","setLoading","Date","BarChart","PieChart","App","store","exact","path","component","WeatherContent","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1a046d4.chunk.js","sourcesContent":["import {GET_LOCATION,GET_WEATHER_BY_DATE} from '../action/actionType'\n\nconst initalState={\n    maxTempList :[],\n    minTempList :[],\n    humidityList :[],\n    locationList:[],\n    woeid : 0,\n    city: ''\n}\n\n\nexport default (state=initalState , action)=>{\n    const {type} = action;\n\n    switch(type){\n        case GET_WEATHER_BY_DATE:\n            const tmpList = formatWeatherList(action.payload.list);\n            return {\n                ...state,\n                ...tmpList,\n                loading:false,\n                woeid:action.payload.woeid,\n                city:action.payload.city\n            }\n        case GET_LOCATION:\n            return {\n                ...state,\n                locationList: getLoactionList(action.payload.list)\n            }\n        default:\n            return{\n                ...state\n            }\n    }\n\n    function getLoactionList(list){\n        return list.map((item)=>{\n            return {\n                title: item.title,\n                woeid: item.woeid\n            };\n        });\n    }\n    function formatWeatherList(list){\n        const maxList = [];\n        const minList = [];\n        const humidityList = [];\n\n        list.forEach((item)=>{\n            const {max_temp , min_temp , humidity ,applicable_date} =item;\n            const dateArray = applicable_date.split('-');\n            const recordDate = `${dateArray[1]}-${dateArray[2]}`;\n            let tmp = {};\n            tmp[recordDate] = max_temp;\n            maxList.push({\n                ...tmp\n            });\n            tmp[recordDate] = min_temp;\n            minList.push({\n                ...tmp\n            });\n            tmp[recordDate] = humidity;\n            humidityList.push({\n                ...tmp\n            });\n        });\n\n        return {\n            maxTempList:maxList,\n            minTempList:minList,\n            humidityList:humidityList\n        };\n    }\n}\n","import reducer from './reducer/index'\nimport {createStore} from 'redux'\n\nexport default createStore(reducer);","export const GET_LOCATION = \"GET_LOCATION\";\nexport const GET_WEATHER_BY_DATE = \"GET_WEATHER_BY_DATE\";","import {GET_LOCATION,GET_WEATHER_BY_DATE} from './actionType'\n\nexport const getLocation =(list)=>{\n    return {\n        type:GET_LOCATION,\n        payload:{\n            list:list\n        }\n    }\n}\n\nexport const getWeatcherList =(woeid , city ,list)=>{\n    return {\n        type:GET_WEATHER_BY_DATE,\n        payload:{\n            woeid: woeid,\n            city: city,\n            list:list\n        }\n    }\n}","import {apiUrl , cors} from '../config/dataConfig'\n\nexport const fetchLoactionList = async (key)=>{\n    const action = `search/?query=${key}`;\n\n    const respone = await callAPI(action);\n    if(respone.status !== 200){\n        return [];\n    }\n    const d = await respone.json();  \n    \n    return d === undefined? [] : d;\n}\n\nexport const fetchLoactionWeatherByDate = async (woeid , dateString)=>{\n    const action = `${woeid}/${dateString}/`;\n    const respone = await callAPI(action);\n    if(respone.status !== 200){\n        return [];\n    }\n\n    const d = await respone.json();\n\n    return d=== undefined? []:d;\n\n}\nconst callAPI =  (action , value)=>{\n    const url = `${cors}${apiUrl}${action}`;\n\n    const header = new Headers();\n    header.append(\"Access-Control-Allow-Origin\" , \"*\");\n    const options ={\n        headers:header\n    }\n    return fetch(url,options);\n}","export const apiUrl = \"https://www.metaweather.com/api/location/\";\nexport const cors = \"https://cors-anywhere.herokuapp.com/\";","import React, { useState, useRef, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {getLocation} from '../redux/action/actionCreator'\nimport {fetchLoactionList} from '../api/weatherAPI'\n\nimport '../res/css/LocationInput.css'\nimport {useHistory} from 'react-router-dom'\nfunction LocationInput({locationList , getLocation , localValue}){\n    const [inputValue , setInputValue] = useState(localValue);\n    const history = useHistory();\n    const [searchID , setSearchID] = useState(0);\n    const inputRef = useRef(null);\n    let optionList = locationList.map((item)=>{\n        const {title , woeid} = item;\n        return <option key={`${item.title}=${item.woeid}`} data-id={woeid} value={title}/>\n    });\n    optionList = optionList.length === 0? <option value=\" \">No Data</option> : optionList;\n    const onLoactionChange = (e)=>{\n       \n        const key = e.currentTarget.value;\n        const searchTarget = filterList(key);\n        setInputValue(key);\n        if(searchTarget.length !== 0){\n            history.push(`/${searchTarget[0].woeid}-${searchTarget[0].title}`);\n            return;\n        }\n\n        console.log(\"...keying\");\n        clearTimeout(searchID);\n        const id = setTimeout(() => {\n            console.log(\"...searching\");\n            getLocation(key);\n        }, 500);\n        setSearchID(id);\n       \n    }\n\n    const onSearchClick  = ()=>{\n        const key = inputRef.current.value;\n        const searchTarget = filterList(key);\n        if(searchTarget.length !== 0)\n            history.push(`/${searchTarget[0].woeid}-${searchTarget[0].title}`);\n    }\n\n    const filterList = (key)=>{\n        return locationList.filter((item)=>{\n            return item.title.toUpperCase() === key.toUpperCase();\n        });\n    }\n    useEffect(()=>{\n        setInputValue(localValue);\n    },[localValue]);\n    return(\n        <div className=\"location-search\">\n            <div className=\"input-area\">\n                <input ref={inputRef} type=\"text\" value={inputValue} list=\"locationList\" onInput={onLoactionChange} />\n                <datalist id=\"locationList\" >\n                    {optionList}\n                </datalist>\n\n                <button className=\"btnSearch\" onClick={onSearchClick}>\n                    <i className=\"fa fa-search fa-2x\"></i>\n                </button>\n            </div>\n            \n        </div>\n    );\n\n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        locationList : state.locationList\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return {\n        getLocation: async (localKey)=>{\n            if(/^\\s*$/.test(localKey)){\n                dispatch(getLocation([]));\n                return;\n            }\n            \n            const list = await fetchLoactionList(localKey);\n            dispatch(getLocation(list));\n        }\n    }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(LocationInput);","import React from 'react'\nimport BasicBar from './BaicChart'\nimport {drawBarChart} from '../../tool/draw'\n\nconst  BarChartHOC = (BasicBar,drawBarChartFn)=>\n    class extends React.Component{\n        constructor(props){\n            super(props);\n\n        }\n        drawBarChart =(ctx , data , canvas_W , canvas_H)=>{\n            const {barColor , padding} = this.props;\n            drawBarChartFn(ctx , data , canvas_W , canvas_H , barColor , padding);\n        }\n\n        render(){\n            return(\n                <BasicBar {...this.props} drawChat={this.drawBarChart} />       \n            )\n            \n        }\n    }\n\nexport default BarChartHOC(BasicBar , drawBarChart);","export const getNowDateString = ()=>{\n    return formatDateString(new Date());\n};\n\nexport const addDate = (date , count)=>{\n    date.setDate(date.getDate() + count);\n    return formatDateString(date);\n}\n\nexport const formatDateString = (date)=>{\n    return `${date.getFullYear()}/${date.getMonth()+1}/${date.getDate()}`;\n}\n\n","import React from 'react'\n\nclass BaicChart extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.canvasRef = React.createRef();\n        this.cardRef = React.createRef();\n\n        this.state ={\n            canvas_W:0,\n            canvas_H:300\n        }\n    }\n\n\n    render(){\n        return(\n            <div ref={(ref)=>{ this.cardRef  = ref}} className=\"chart-card\">\n                <h2 className={this.props.className} >{this.props.title}</h2>\n                <canvas ref={(ref)=>{ this.canvasRef = ref}} width={this.state.canvas_W} height={this.state.canvas_H} >\n          \n                </canvas>\n                {this.props.children}\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        const width = this.cardRef.clientWidth;\n        const height = width < 400 && this.props.mobile? width/2 * 3 + 50:this.state.canvas_H;\n        this.setState({\n            canvas_W:width,\n            canvas_H:height\n        });\n    }\n\n    componentDidUpdate(){\n        const ctx = this.canvasRef.getContext('2d');\n        ctx.clearRect(0 ,0 ,this.state.canvas_W, this.state.canvas_H);\n        if(this.props.drawChat && this.props.data){\n            console.log(this.props.data);\n            this.props.drawChat(ctx,this.props.data, this.state.canvas_W , this.state.canvas_H);\n        }\n           \n    }\n}\n\nexport default BaicChart;","export const drawBarChart = (ctx ,data , canvasWidth , canvasHeight , colorList , padding)=>{\n    if(data.length === 0)\n        return;\n\n    let maxValue = 0 ;\n    data.forEach((item)=>{\n        const v = Object.values(item)[0];\n        maxValue = v > maxValue? v: maxValue;  \n    });\n    const scale = Math.round(maxValue / 5);\n    drawGrid(ctx , maxValue ,  canvasWidth , canvasHeight - 100 , scale , \"#cccccc\" , padding);\n\n    drawBarList(ctx , canvasWidth , canvasHeight  - 100, data, maxValue , colorList[0] , padding);\n}\n\nexport const drawPieList = (ctx ,data, canvasWidth , canvasHeight , colorList ,titleList , padding)=>{\n    if(data.length === 0)\n        return;\n\n    const paddingSize = setPaddingSize(canvasWidth , padding);\n    const count = data.length;\n    const originWidth = (canvasWidth - paddingSize)/ count \n    const singleWidth = setPieChartWidth(canvasWidth ,originWidth);\n    const centerX = singleWidth /2;\n    const centerY = centerX + 20;\n    const step = getChartStep(canvasWidth);\n    const radius =  Math.min(centerX , centerY) - step;\n    const twoPI = 2 * Math.PI;\n    const halfPieHieght=  radius + paddingSize;\n    const rowCount = parseInt(canvasWidth / singleWidth) ;\n    \n    data.map((pieObj , i)=>{\n        const key = Object.keys(pieObj)[0];\n        const val = Object.values(pieObj)[0];\n        const value_ratio = val / 100;\n        const empty_ratio = 1 - value_ratio;\n \n        const value_angle = twoPI * value_ratio;\n        const empty_angle = twoPI * empty_ratio;\n        const angleList = [value_angle , empty_angle];\n        const color = [ colorList[0] , colorList[1]];\n\n        const rowIndex = (i) % rowCount;\n        const slicePieCenterX = centerX + (singleWidth * rowIndex);\n        const columnIndex = parseInt( i / rowCount);\n        const pieCenterY = centerY + (halfPieHieght * 2 * columnIndex ) ;\n        drawBar(ctx , 0 ,0, 15 , 15 , colorList[0]);\n        drawText(ctx,titleList[0], 30 ,15 ,\"#000\", \"15px Arial\")\n        let start_angle = 0;\n        for(let j = 0 ; j < 2; j++){\n            const slice_angle = angleList[j];\n            const cosX = Math.cos(start_angle + slice_angle/2);\n            const sinY = Math.sin(start_angle + slice_angle/2);\n            const pieCOlor = setLinearGradientColor(ctx ,color[j] , slicePieCenterX ,pieCenterY , slicePieCenterX+ cosX * radius , pieCenterY + sinY*radius);\n            drawPieSlice(ctx ,\n                slicePieCenterX,\n                pieCenterY,\n                radius,\n                start_angle,\n                start_angle + slice_angle,\n                pieCOlor\n                );\n            \n\n            const labelX = slicePieCenterX + radius/2 * cosX;\n            const labelY = pieCenterY  + radius/2 * sinY;\n            const msg = `${ Math.round(slice_angle / twoPI * 100)} %`;\n            const fontSize =  setFontSize(canvasWidth , 20);\n            drawText(ctx ,msg , labelX , labelY , \"#fff\" , `bold ${fontSize} Arial`);\n            start_angle += slice_angle;\n        }\n\n        drawText(ctx ,key , slicePieCenterX , pieCenterY  + halfPieHieght , \"#000\" , \"15px Arial\" , \"center\");\n    });\n}\n\nconst drawGrid = (ctx , maxValue , canvasWidth , canvasHeight , scale , color , padding)=>{\n    let gridValue = 0 ;\n    \n    while(gridValue <= maxValue){\n        const ratio = 1 - gridValue / maxValue;\n        const fix1px = (ctx.lineWidth % 2 === 0) ?0: 0.5;\n        const gridY = Math.round(canvasHeight  * ratio) +fix1px + padding;\n        drawLine(ctx , padding , gridY , canvasWidth - padding  , gridY ,color);\n        const textY = (gridY === 0 ? 12 : gridY -2 ) + fix1px;\n        drawText(ctx , gridValue , 10 , textY , color , \"#000\", \"bold 10px Arial\");\n        gridValue += scale;     \n    }\n    \n}\nconst drawBarList = (ctx, canvasWidth , canvasHeight , data , maxValue , color , padding , bar_w)=>{\n    const barCount = data.length;\n    const paddingSize = setPaddingSize(canvasWidth , padding);\n    const barSize = bar_w || (canvasWidth / barCount - paddingSize);\n    const startX = (paddingSize || 0) + 20;\n    const step = getChartStep(canvasWidth);\n    for(let barIndex =0 ; barIndex < barCount ; barIndex++){\n        const barObj = data[barIndex];\n        const barKey = Object.keys(barObj)[0];\n        const barVal = Object.values(barObj)[0];\n        \n        const ratio = barVal / maxValue;\n        const barHeight = canvasHeight * ratio;\n        \n        const x = startX + barIndex * barSize;\n        const y = canvasHeight - barHeight + padding;\n\n        const barColor = setLinearGradientColor(ctx , color ,x, y,  x + barSize -step ,  barHeight);\n        drawBar(ctx, \n            x,\n            y ,\n            barSize -step,\n            barHeight,\n            barColor);\n        const textX =  x + (barSize -step) /2;\n        const fontSize = setFontSize(canvasWidth , 15);\n        drawText(ctx , barKey ,textX , canvasHeight + padding + 20 , \"#000\", `${fontSize} Arial` , \"center\");\n    }\n}\n\n\nconst drawText = (ctx , msg , x , y , color,fontStyle , align)=>{\n    const textAlign = align || \"\";\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.font = fontStyle;\n    ctx.textAlign = textAlign;\n    ctx.fillText(msg , x , y);\n    ctx.restore();\n}\nconst setLinearGradientColor = (ctx , color , startX , startY , endX , endY)=>{\n    const gradient = ctx.createLinearGradient(startX , startY , endX , endY);\n    switch(color){\n        case \"red\":\n            gradient.addColorStop(0 , \"#e01616\" );\n            gradient.addColorStop(1, \"#e6dede\");\n                 \n            break;\n        case \"blue\":\n            gradient.addColorStop(0, \"#1107a9\");\n            gradient.addColorStop(1, \"#f1efef\");     \n            break;\n        case \"gray\":\n            gradient.addColorStop(0, \"#cccccc\");\n            gradient.addColorStop(1, \"#f1efef\");     \n            break;\n    }\n    return gradient;\n}\nconst drawLine = (ctx, startX, startY, endX, endY, color) =>{\n    ctx.save();//保存畫筆設定\n    ctx.strokeStyle = color;\n    ctx.beginPath();//開始新路線\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();//下筆\n\n    ctx.restore();//畫完切回原本設定\n}\nconst drawBar = (ctx , upperLeftCornerX , upperLeftCornerY, width , height , color)=>{\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(upperLeftCornerX , upperLeftCornerY , width , height);\n    ctx.restore();\n}\n\nconst drawArc = (ctx , centerX , centerY ,radius , startAngle , endAngle)=>{\n    ctx.beginPath();\n    ctx.arc(centerX ,  centerY , radius , startAngle , endAngle);\n    ctx.stroke();\n}\n\nconst drawPieSlice =(ctx , centerX , centerY ,radius ,startAngle , endAngle ,color)=>{\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(centerX,centerY);\n    ctx.arc(centerX ,centerY ,radius , startAngle , endAngle);\n    ctx.closePath();//以當下畫筆位置進行封閉\n    ctx.fill();//填滿\n    ctx.restore();\n}\n\nconst getChartStep = (canvasWidth)=>{\n    return canvasWidth > 400? 10 : 2\n};\n\nconst setPaddingSize =(canvasWidth , padding)=>{\n    return canvasWidth > 400? padding : 15\n};\n\nconst setFontSize=(canvasWidth , fontSize)=>{\n    return canvasWidth > 400? `${fontSize}px` :  \"10px\";\n};\n\nconst setPieChartWidth = (canvasWidth , originWidth)=>{\n    return canvasWidth > 400? originWidth :150 ;\n};","import React from 'react'\nimport BasicBar from './BaicChart'\nimport {drawPieList} from '../../tool/draw'\n\nconst  BarChartHOC = (BasicBar,drawPieList)=>\n    class extends React.Component{\n        constructor(props){\n            super(props);\n\n        }\n        drawPieChart =(ctx ,data, canvas_W , canvas_H)=>{\n            const {pieColor , padding , titleList} = this.props;\n            drawPieList(ctx ,data , canvas_W , canvas_H , pieColor ,titleList ,padding);\n        }\n\n        render(){\n            return(\n                <BasicBar {...this.props} mobile={true} drawChat={this.drawPieChart} >\n                </BasicBar>     \n            )\n            \n        }\n    }\n\nexport default BarChartHOC(BasicBar , drawPieList);","import React, { useEffect, useState } from 'react';\n\nimport LocationInput from './LocationInput';\nimport {getWeatcherList} from '../redux/action/actionCreator'\nimport {fetchLoactionWeatherByDate} from '../api/weatherAPI'\nimport { addDate } from '../tool/date';\nimport { connect } from 'react-redux';\n\nimport '../res/css/WeatherContent.css'\nimport BarChart from './chart/BarChart';\nimport PieChart from './chart/PieChart';\nfunction WeatherContent(props) {\n    const {location} = props.match.params;\n    const [hiddenClass , setLoading] = useState(\"scroll-hidden\");\n\n    useEffect(()=>{\n\n        setLoading(\"scroll-hidden\");\n        console.log(\"go into Effect...\");\n        if(location){\n            const tmp = location.split('-');\n            const [woeid , city] = tmp;\n            props.getWeatcherList(woeid ,city , new Date() , setLoading);\n        }else{\n            setLoading(\"\"); \n        }\n    },[location]);\n    return (\n        <div className={`weather ${hiddenClass}`}>\n            <LocationInput localValue={props.city} />\n            {props.maxTempList.length===0?\"\":\n            <div className={`chart-content`}>\n                <BarChart title=\"Max Temperatrue\" className=\"max\" data={props.maxTempList} barColor={[\"red\"]} padding={50}/>\n                <BarChart title=\"Min Temperatrue\" className=\"min\" data={props.minTempList} barColor={[\"blue\"]} padding={50} />\n                <PieChart title=\"Humidity\" className=\"humidity\"  data={props.humidityList} pieColor={[\"gray\", \"red\"]} titleList={[\"Humidity\"]} padding={20} />\n            </div>\n            }\n            \n            <div className=\"loading-mask\">\n                <div className=\"loader\"></div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state)=>{\n    console.log(state);\n    return {\n        ...state\n    }\n};\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        getWeatcherList: async (woeid ,city , startDate, loadingFn)=>{\n            const list = [];\n            for(let i = 1 ; i <= 5 ; i++){\n                const tmpDateString = addDate(startDate , 1);\n                const tmp = await fetchLoactionWeatherByDate(woeid , tmpDateString);\n                if(tmp.length !== 0)\n                    list.push(tmp[0]);\n            }        \n            dispatch(getWeatcherList(woeid ,city ,list));\n            loadingFn(\"\");\n        }\n    };\n};\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(WeatherContent);\n","import React from 'react';\nimport './res/css/App.css';\n\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport LocationInput from './components/LocationInput';\nimport {HashRouter ,Route} from 'react-router-dom'\nimport WeatherContent from './components/WeatherContent'\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <div className=\"App\">\n          <Route exact path={['/', '/:location']} component={WeatherContent}/>\n        </div>\n      </HashRouter>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './res/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}